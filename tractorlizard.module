<?php

/**
 * Implementation of hook_menu().
 */
function tractorlizard_menu() {
  return array(
    'admin/content/tractorlizard' => array(
      'title' => 'TractorLizard',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('tractorlizard_admin_settings_form'),
      'access arguments' => array('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
    ),
  );
}

/**
 * Admin settings form.
 */
function tractorlizard_admin_settings_form() {
  $form['tractorlizard_fetch_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Fetch URL'),
    '#description' => t('Enter the URL to fetch quotes from (typically the homepage).'),
    '#default_value' => variable_get('tractorlizard_fetch_url', 'http://tractorlizard.com'),
    '#size' => 30,
  );
  $form['tractorlizard_twitter_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Twitter username'),
    '#description' => t('Enter the username of a Twitter account to post updates to.'),
    '#default_value' => variable_get('tractorlizard_twitter_username', NULL),
    '#size' => 20,
  );
  $form['tractorlizard_twitter_password'] = array(
    '#type' => 'password',
    '#title' => t('Twitter password'),
    '#description' => t('Enter the password for the Twitter account entered above.'),
    '#default_value' => variable_get('tractorlizard_twitter_password', NULL),
    '#size' => 20,
  );
  $form['tractorlizard_post_interval'] = array(
    '#type' => 'select',
    '#title' => t('Post interval'),
    '#description' => t('Choose the interval between Twitter updates.'),
    '#default_value' => variable_get('tractorlizard_post_interval', 14400),
    '#options' => array(
      3600  => t('one hour'),
      14400 => t('four hours'),
      86400 => t('one day'),
    ),
  );
  $form['tractorlizard_test_run'] = array(
    '#title' => t('Test output'),
    '#prefix' => '<div>',
    '#value' => _tractorlizard_fetch(),
    '#suffix' => '</div>',
  );

  return system_settings_form($form);
}

/**
 * Implementation of hook_cron().
 */
function tractorlizard_cron() {
  $last = variable_get('tractorlizard_last_update', NULL);
  if ( ! $last OR time() >= $last + variable_get('tractorlizard_post_interval', 14400)) {
    $content = _tractorlizard_fetch();
    if ($content) {
      $url = 'http://' .
             variable_get('tractorlizard_twitter_username', NULL) .
             ':' .
             variable_get('tractorlizard_twitter_password', NULL) .
             '@' .
             'twitter.com/statuses/update.xml';
      $result = drupal_http_request(
        $url,
        array(),
        'POST',
        'status=' . $content
      );
      if ( ! $result->error) {
        watchdog('tractorlizard', 'Successfully set Twitter status to %status.', array('%status' => $content));
        variable_set('tractorlizard_last_update', time());
      }
      else
        watchdog('tractorlizard', 'There was an error when trying to update the Twitter status: %error', array('%error' => $result->error), WATCHDOG_ERROR);
    }
  }
}

/**
 * Utility method to fetch a quote.
 */
function _tractorlizard_fetch() {
  if (variable_get('tractorlizard_fetch_url', NULL)) {
    $values = array();
    $data   = drupal_http_request(variable_get('tractorlizard_fetch_url', NULL));
    if ($data && $data->code == 200) {
      $lines = preg_split("/\\n/", preg_replace("/(\<\/div\>)/", "$1\n", $data->data));
      $keys  = array('verb', 'object1', 'preposition', 'adjective', 'object2');
      foreach ($lines as $line) {
        $match = "'intro-" . $keys[count($values)] . "'";
        if (strpos($line, $match)) {
          $values[count($values)] = strip_tags($line);
        }
      }
    }

    return trim(implode(' ', $values));
  }
  else
    return NULL;
}